# Repo: codefoco/AzureDevopsTemplates
resources:
  repositories:
    - repository: templates
      type: github
      name: codefoco/AzureDevopsTemplates
      endpoint: codefoco


jobs:
- job: 'KeraLuaMac'
  displayName: 'Mac'
  variables:
    - group: 'Keys'

  pool:
    vmImage: 'macOS-10.14'
    demands: msbuild

  steps:
  - checkout: self 
    submodules: 'true'

  - template: common-dotnet.yml@templates
  - template: common-macos.yml@templates

  - task: NuGetCommand@2
    displayName: 'NuGet restore KeraLua.Mac.sln'
    inputs:
      restoreSolution: KeraLua.Mac.sln

  - task: NuGetCommand@2
    displayName: 'NuGet restore KeraLua.sln'
    inputs:
      restoreSolution: KeraLua.sln

  - task: PowerShell@2
    displayName: 'PowerShell Script'
    inputs:
      targetType: filePath
      filePath: ./devops/PreBuild.ps1
      arguments: 'KeraLua'
      pwsh: true

  - task: MSBuild@1
    displayName: 'Build solution KeraLua.sln'
    inputs:
      solution: KeraLua.sln
      configuration: Release

  - task: MSBuild@1
    displayName: 'Build solution KeraLua.Mac.sln'
    inputs:
      solution: KeraLua.Mac.sln
      configuration: Release

  - script: 'dotnet test ./tests/build/net45/bin/Release/KeraLuaTest.dll -l:trx'
    displayName: 'Run OSX tests'

  - script: 'mv TestResults/*.trx ./KeraLuaTest.Mac.xml'
    displayName: 'Rename Test result'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: 'KeraLuaTest.Mac.xml'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish KeraLuaTest.Mac.xml'
    inputs:
      targetPath: KeraLuaTest.Mac.xml
      artifact: 'KeraLuaTest.Mac.xml'
      publishLocation: 'pipeline'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Pipeline Artifact: Xamarin.iOS.KeraLua'
    inputs:
      targetPath: lib/Release/xamarinios
      artifact: 'Xamarin.iOS.KeraLua'
      publishLocation: 'pipeline'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Pipeline Artifact: Xamarin.tvOS.KeraLua'
    inputs:
      targetPath: lib/Release/xamarintvos
      artifact: 'Xamarin.tvOS.KeraLua'
      publishLocation: 'pipeline'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Pipeline Artifact: Xamarin.watchOS.KeraLua'
    inputs:
      targetPath: lib/Release/xamarinwatchos
      artifact: 'Xamarin.watchOS.KeraLua'
      publishLocation: 'pipeline'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Pipeline Artifact: Xamarin.Mac.KeraLua'
    inputs:
      targetPath: lib/Release/xamarinmac
      artifact: 'Xamarin.Mac.KeraLua'
      publishLocation: 'pipeline'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Pipeline Artifact: liblua54.dylib'
    inputs:
      targetPath: runtimes/osx/native/liblua54.dylib
      artifact: 'liblua54.dylib'
      publishLocation: 'pipeline'

  - template: send-telegram.yml@templates

- job: 'KeraLuaLinux'
  displayName: 'Linux'
  dependsOn: 'KeraLuaMac'
  variables:
    - group: 'Keys'

  pool:
    vmImage: 'ubuntu-16.04'
    demands: msbuild

  steps:
  - template: common-dotnet.yml@templates

  - checkout: self 
    submodules: 'true'

  - task: NuGetCommand@2
    displayName: 'NuGet restore'
    inputs:
      restoreSolution: KeraLua.sln

  - task: MSBuild@1
    displayName: 'Build solution KeraLua.sln'
    inputs:
      solution: KeraLua.sln
      configuration: Release

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Pipeline Artifact: liblua54.so'
    inputs:
      targetPath: 'runtimes/linux-x64/native/liblua54.so'
      artifact: 'liblua54.so'
      publishLocation: 'pipeline'

  - template: send-telegram.yml@templates

- job: 'KeraLuaWindows'
  displayName: 'Windows'
  dependsOn: 'KeraLuaLinux'
  variables:
    - group: 'Keys'

  pool:
    vmImage: 'windows-2019'
    demands:
    - msbuild
    - visualstudio
    - vstest

  steps:
  - checkout: self 
    submodules: true

  - template: common-dotnet.yml@templates
  - template: common-win.yml@templates

  - task: NuGetCommand@2
    displayName: 'NuGet restore KeraLua.sln'
    inputs:
      restoreSolution: KeraLua.sln

  - task: NuGetCommand@2
    displayName: 'NuGet restore KeraLua.UWP.sln'
    inputs:
      restoreSolution: KeraLua.UWP.sln

  - task: NuGetCommand@2
    displayName: 'NuGet restore'
    inputs:
      restoreSolution: KeraLua.Core.sln

  - task: PowerShell@2
    displayName: 'PreBuild Script'
    inputs:
      filePath: './devops/PreBuild.ps1'
      arguments: 'KeraLua'
      errorActionPreference: 'silentlyContinue'
      pwsh: true

  - task: MSBuild@1
    displayName: 'Build solution KeraLua.sln'
    inputs:
      solution: KeraLua.sln
      configuration: Release

  - task: MSBuild@1
    displayName: 'Build solution KeraLua.UWP.sln'
    inputs:
      solution: KeraLua.UWP.sln
      configuration: Release

  - task: MSBuild@1
    displayName: 'Build .NET Core'
    inputs:
      solution: KeraLua.Core.sln
      configuration: Release
      msbuildArguments: /restore

  - task: DotNetCoreCLI@2
    displayName: 'dotnet vstest'
    inputs:
      command: custom
      custom: vstest
      arguments: '.\tests\build\netcore\bin\Release\netcoreapp3.1\KeraLuaTest.Core.dll'

  - task: MSBuild@1
    displayName: 'Build Android'
    inputs:
      solution: KeraLua.Android.sln
      configuration: Release
      msbuildArguments: '/p:AndroidNdkDirectory=%ANDROID_NDK_HOME%'
      
  - task: VSTest@2
    displayName: 'Run VSTest'
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: '.\tests\build\net45\bin\Release\KeraLuaTest.dll'
      platform: 'x86'
      resultsFolder: '.\TestResults'
      configuration: 'Release'
      
  - script: 'rename $(Agent.BuildDirectory)\TestResults\*.trx .\KeraLuaTest.Windows.xml'
    displayName: 'Rename Test result'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: 'KeraLuaTest.Windows.xml'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish KeraLuaTest.Windows.xml'
    inputs:
      targetPath: KeraLuaTest.Windows.xml
      artifact: 'KeraLuaTest.Windows.xml'
      publishLocation: 'pipeline'
    
  - task: DownloadPipelineArtifact@2
    displayName: 'Download Build Xamarin.iOS'
    inputs:
      buildType: 'current'
      artifactName: 'Xamarin.iOS.KeraLua'
      targetPath: 'lib/Release/xamarinios/'

  - task: DownloadPipelineArtifact@2
    displayName: 'Download Build Xamarin.Mac'
    inputs:
      buildType: 'current'
      artifactName: 'Xamarin.Mac.KeraLua'
      targetPath: 'lib/Release/xamarinmac/'

  - task: DownloadPipelineArtifact@2
    displayName: 'Download Build Xamarin.watchOS'
    inputs:
      buildType: 'current'
      artifactName: 'Xamarin.watchOS.KeraLua'
      targetPath: 'lib/Release/xamarinwatchos/'

  - task: DownloadPipelineArtifact@2
    displayName: 'Download Build Xamarin.tvOS'
    inputs:
      buildType: 'current'
      artifactName: 'Xamarin.tvOS.KeraLua'
      targetPath: 'lib/Release/xamarintvos/'

  - task: DownloadPipelineArtifact@2
    displayName: 'Download Build liblua54.dylib'
    inputs:
      buildType: 'current'
      artifactName: 'liblua54.dylib'
      targetPath: 'runtimes/osx/native/'

  - task: DownloadPipelineArtifact@2
    displayName: 'Download Build liblua54.so (Linux)'
    inputs:
      buildType: 'current'
      artifactName: 'liblua54.so'
      targetPath: 'runtimes/linux-x64/native/'

  - script: 'nuget setapikey $(apikey)'
    displayName: 'Set NuGet API Key'

  - task: PowerShell@2
    displayName: 'Package NuGet'
    inputs:
      targetType: filePath
      filePath: ./devops/Package.ps1
      arguments: 'KeraLua'
      pwsh: true

  - task: PublishBuildArtifacts@1
    displayName: 'Save KeraLua.nupkg Artifact'
    inputs:
      PathtoPublish: KeraLua.nupkg
      ArtifactName: KeraLua.nupkg

  - task: PublishBuildArtifacts@1
    displayName: 'Save KeraLua.snupkg Artifact'
    inputs:
      PathtoPublish: KeraLua.snupkg
      ArtifactName: KeraLua.snupkg

  - task: PowerShell@2
    displayName: 'Publish NuGet'
    inputs:
      targetType: filePath
      filePath: ./devops/Publish.ps1
      arguments: KeraLua
      pwsh: true

  - template: send-telegram.yml@templates
