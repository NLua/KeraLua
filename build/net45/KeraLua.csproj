<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{C45805A8-6436-4738-BD9F-4632EEA63BBC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>KeraLua</RootNamespace>
    <AssemblyName>KeraLua</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <TargetFrameworkProfile />
    <ExternalLuaDir>..\..\external\lua</ExternalLuaDir>
    <OutputRuntimeDir>..\..\runtime\</OutputRuntimeDir>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\..\lib\Debug\net45\</OutputPath>
    <DefineConstants>DEBUG;</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
    <DocumentationFile>
    </DocumentationFile>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <Optimize>true</Optimize>
    <OutputPath>..\..\lib\Release\net45\</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DocumentationFile>..\..\lib\Release\net45\KeraLua.xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
  </ItemGroup>
  <Import Project="..\..\src\KeraLua.Core.projitems" Label="Shared" Condition="Exists('..\..\src\KeraLua.Core.projitems')" />
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Target Name="BuildWinLua" BeforeTargets="BeforeBuild" Condition="'$(OS)'=='Windows_NT'">
    <PropertyGroup>
      <Win32BuildDir>win-x86</Win32BuildDir>
      <Win64BuildDir>win-x64</Win64BuildDir>
      <BinaryLibraryPath32>bin\lua53.dll</BinaryLibraryPath32>
      <BinaryLibraryPath64>bin64\lua53.dll</BinaryLibraryPath64>
      <ExternalLuaPath>$([System.IO.Path]::GetFullPath($(ExternalLuaDir)))</ExternalLuaPath>
    </PropertyGroup>
    <Message Text="Building Windows Lua library (x86)" />
    <Exec Command="mkdir $(ExternalLuaPath)\$(Win32BuildDir)" WorkingDirectory="$(ExternalLuaPath)" Condition="!Exists('$(ExternalLuaPath)\$(Win32BuildDir)')" />
    <Exec Command="cmake $(ExternalLuaPath)" WorkingDirectory="$(ExternalLuaPath)\$(Win32BuildDir)" Condition="!Exists('$(ExternalLuaPath)\$(Win32BuildDir)\CMakeCache.txt')" />
    <Exec Command="cmake --build . --config Release" WorkingDirectory="$(ExternalLuaPath)\$(Win32BuildDir)" />
    <Message Text="Building Windows Lua library (x64)" />
    <Exec Command="mkdir $(ExternalLuaPath)\$(Win64BuildDir)" WorkingDirectory="$(ExternalLuaPath)" Condition="!Exists('$(ExternalLuaPath)\$(Win64BuildDir)')" />
    <Exec Command="cmake $(ExternalLuaPath) -DCMAKE_GENERATOR_PLATFORM=x64" WorkingDirectory="$(ExternalLuaPath)\$(Win64BuildDir)" Condition="!Exists('$(ExternalLuaPath)\$(Win64BuildDir)\CMakeCache.txt')" />
    <Exec Command="cmake --build . --config Release" WorkingDirectory="$(ExternalLuaPath)\$(Win64BuildDir)" />
    <Copy SourceFiles="$(ExternalLuaPath)\$(Win32BuildDir)\$(BinaryLibraryPath32)" DestinationFolder="$(OutputRuntimeDir)\$(Win32BuildDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$(ExternalLuaPath)\$(Win64BuildDir)\$(BinaryLibraryPath64)" DestinationFolder="$(OutputRuntimeDir)\$(Win64BuildDir)" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="CleanWinLua" AfterTargets="Clean" Condition="'$(OS)'=='Windows_NT'">
    <PropertyGroup>
      <Win32BuildDir>win-x86</Win32BuildDir>
      <Win64BuildDir>win-x64</Win64BuildDir>
      <ExternalLuaPath>$([System.IO.Path]::GetFullPath($(ExternalLuaDir)))</ExternalLuaPath>
    </PropertyGroup>
      <Message Text="Cleaning Lua library (x86/x64)" />
      <RemoveDir Directories="$(ExternalLuaPath)\$(Win64BuildDir); $(OutputRuntimeDir)\$(Win64BuildDir) " />
      <RemoveDir Directories="$(ExternalLuaPath)\$(Win32BuildDir); $(OutputRuntimeDir)\$(Win32BuildDir) " />
  </Target>
  <Target Name="BuildOSXLua" BeforeTargets="BeforeBuild" Condition="'$(OS)'=='Unix' and $([System.IO.File]::Exists('/usr/lib/libc.dylib'))" >
    <PropertyGroup>
      <OSX32BuildDir>osx-32</OSX32BuildDir>
      <OSX64BuildDir>osx-64</OSX64BuildDir>
      <OSXBuildDir>osx</OSXBuildDir>
      <ExternalLuaPath>$([System.IO.Path]::GetFullPath($(ExternalLuaDir)))</ExternalLuaPath>
      <BinaryLibraryPath64>lib64\liblua53.dylib</BinaryLibraryPath64>
      <BinaryLibraryPath32>lib\liblua53.dylib</BinaryLibraryPath32>
      <BinaryLibraryPath>liblua53.dylib</BinaryLibraryPath>
    </PropertyGroup>
    <Message Text="Building macOS Lua library (x64/i386)" />
    <Exec Command="mkdir $(ExternalLuaPath)\$(OSXBuildDir)" WorkingDirectory="$(ExternalLuaPath)" Condition="!Exists('$(ExternalLuaPath)\$(OSXBuildDir)')" />
    <Exec Command="mkdir $(ExternalLuaPath)\$(OSX32BuildDir)" WorkingDirectory="$(ExternalLuaPath)" Condition="!Exists('$(ExternalLuaPath)\$(OSX32BuildDir)')" />
    <Exec Command="mkdir $(ExternalLuaPath)\$(OSX64BuildDir)" WorkingDirectory="$(ExternalLuaPath)" Condition="!Exists('$(ExternalLuaPath)\$(OSX64BuildDir)')" />
    <Exec Command="cmake $(ExternalLuaPath) -DCMAKE_OSX_ARCHITECTURES=i386" WorkingDirectory="$(ExternalLuaPath)\$(OSX32BuildDir)" Condition="!Exists('$(ExternalLuaPath)\$(OSX32BuildDir)\CMakeCache.txt')" />
    <Exec Command="cmake $(ExternalLuaPath) -DCMAKE_OSX_ARCHITECTURES=x86_64" WorkingDirectory="$(ExternalLuaPath)\$(OSX64BuildDir)" Condition="!Exists('$(ExternalLuaPath)\$(OSX64BuildDir)\CMakeCache.txt')" />
    <Exec Command="cmake --build . --config Release" WorkingDirectory="$(ExternalLuaPath)\$(OSX32BuildDir)" />
    <Exec Command="cmake --build . --config Release" WorkingDirectory="$(ExternalLuaPath)\$(OSX64BuildDir)" />
    <Exec Command="lipo -create $(OSX64BuildDir)\$(BinaryLibraryPath64) $(OSX32BuildDir)\$(BinaryLibraryPath32) -output $(OSXBuildDir)\$(BinaryLibraryPath)" WorkingDirectory="$(ExternalLuaPath)" />
    <Copy SourceFiles="$(ExternalLuaPath)\$(OSXBuildDir)\$(BinaryLibraryPath)" DestinationFolder="$(OutputRuntimeDir)\$(OSXBuildDir)" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="CleanOSXLua" AfterTargets="Clean" Condition="'$(OS)'=='Unix' and $([System.IO.File]::Exists('/usr/lib/libc.dylib'))" >
    <PropertyGroup>
      <OSXBuildDir>osx</OSXBuildDir>
      <OSX32BuildDir>osx-32</OSX32BuildDir>
      <OSX64BuildDir>osx-64</OSX64BuildDir>
      <ExternalLuaPath>$([System.IO.Path]::GetFullPath($(ExternalLuaDir)))</ExternalLuaPath>
    </PropertyGroup>
      <Message Text="Cleaning Lua library (osx)" />
      <RemoveDir Directories="
      $(ExternalLuaPath)\$(OSXBuildDir); 
      $(ExternalLuaPath)\$(OSX32BuildDir); 
      $(ExternalLuaPath)\$(OSX64BuildDir); 
      $(OutputRuntimeDir)\$(OSXBuildDir) " />
  </Target>
  
</Project>